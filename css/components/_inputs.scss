@use "../abstracts" as *;

input[type="text"],
input[type="number"] {
  box-sizing: border-box;
  font-size: 1.125rem;
  line-height: 1;
  font-weight: 500;
  display: block;
  width: 100%;
  margin: 0;
  padding: 0;

  border: 1px solid rgb(0, 0, 0);
  border-radius: 1.5rem;
  padding: 0.75rem 1.5rem;
}

//color input

.color_container {
  box-sizing: border-box;
  width: 3rem;
  aspect-ratio: 1/1;
  border-radius: 50%;
  border: 1px solid rgb(0, 0, 0);
  padding: 0.25rem;
  height: 3rem;

  .color_dot {
    box-sizing: border-box;
    background-color: var(--section_color);
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;

    @each $type in $colors_list {
      &.#{nth($type, 1)} {
        --section_color: #{nth($type, 2)};
      }
    }
  } //color dot

  form {
    position: absolute;
    width: 100%;
    max-height: 0;
    opacity: 1;
    transform: translateY(3rem);
    overflow: hidden;
    transition: 0.3s all;
    width: 100%;
    left: 0;
    background-color: rgb(255, 255, 255);
    box-shadow: 0 0.5rem 2rem 0 rgb(0, 0, 0, 0.25);
    border-radius: 0.5rem;
    padding: 0rem 1rem;
    z-index: 100;
    .color_list {
      max-height: 100%;
      overflow-y: scroll;
      li {
        border-bottom: 1px solid rgb(225, 225, 225);
        display: flex;
        justify-content: space-between;
        font-size: 1rem;
        width: 100%;
        gap: 1rem;
        padding: 0.25rem 0;

        input {
          display: none;
        }
        label {
          font-family: $sans_font;
          display: flex;
          justify-content: space-between;
          width: 100%;
          padding: 0.45rem 0.25rem;
          text-transform: capitalize;
          span {
            flex-grow: 1;
            display: block;
            margin-left: 0.5rem;
          }
          &::after {
            content: "";
            width: 2rem;
            height: 1rem;
            display: block;
            background-color: var(--thisColor);
            border: 1px solid rgb(125, 125, 125);
          }
          &::before {
            content: "âœ“";
            display: block;
            opacity: 0;
          }
        } //label
        input:checked + label {
          background-color: rgb(0, 0, 0, 0.1);
          &:before {
            opacity: 1;
          }
        }
      }
    }
  } //form

  &.isOpen {
    form {
      max-height: 100vh;
      opacity: 1;
      padding: 1rem;

      transform: translate(-50%, -50%);
      position: fixed;
      top: 0%;
      left: 50%;
      height: 90%;
      width: 60%;
    }
  }

  //loop for list of colors
  @each $type in $colors_list {
    input[value="#{nth($type, 1)}"] + label {
      --thisColor: #{nth($type, 2)};
    }
  }
} //color container
